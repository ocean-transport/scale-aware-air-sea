[build-system]
requires = ["setuptools>=61", "wheel", "setuptools_scm[toml]>=6.0"]
build-backend = "setuptools.build_meta"


[project]
name = "scale_aware_air_sea"
dynamic = ["version"]
authors = [
  { name="Julius Busecke", email="julius@ldeo.columbia.edu" },
]
description = "Research code to investigate small scale air-sea fluxes"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 1 - Planning",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering",
]
license = { text = "Apache-2.0" }
keywords = ["pangeo", "data", "esgf"]
dependencies = [
    "xarray",
    "zarr",
    "fsspec",
    "gcsfs",
    "intake-esm",
    "matplotlib"
]

[project.optional-dependencies]
test = [
    "pytest"
]

dev = [
    "ruff",
    "pre-commit",
    "scale_aware_air_sea[test]"
]

[project.urls]
Homepage = "https://github.com/ocean-transport/scale-aware-air-sea"
Tracker = "https://github.com/ocean-transport/scale-aware-air-sea/issues"

[tool.setuptools.packages.find]
where = ["scale_aware_air_sea"]

[tool.setuptools_scm]
write_to = "scale_aware_air_sea/_version.py"
write_to_template = "__version__ = '{version}'"

[tool.ruff]
# Exclude directories
force-exclude = true
extend-exclude = ["notebooks", "paper", "pipeline"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "scale_aware_air_sea/__init__.py",
]

# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"